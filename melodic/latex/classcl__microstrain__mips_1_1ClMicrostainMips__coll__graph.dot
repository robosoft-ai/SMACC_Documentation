digraph "cl_microstrain_mips::ClMicrostainMips"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  Node1 [label="{cl_microstrain_mips\l::ClMicrostainMips\n|# resetFilterSrv\l# gyroBiasCaptureSrv\l# setSoftIronMatrixSrv\l# setComplementaryFilterSrv\l# setFilterEulerSrv\l# setFilterHeadingSrv\l# setAccelBiasModelSrv\l# setAccelAdaptiveValsSrv\l# setSensorVehicleFrameTransSrv\l# setSensorVehicleFrameOffsetSrv\l# setAccelBiasSrv\l# setGyroBiasSrv\l# setHardIronValuesSrv\l# getGyroBiasSrv\l# getHardIronValuesSrv\l# getSoftIronMatrixSrv\l# getSensorVehicleFrameTransSrv\l# setReferencePositionSrv\l# getReferencePositionSrv\l# setConingScullingCompSrv\l# setEstimationControlFlagsSrv\l# setDynamicsModeSrv\l# setZeroAngleUpdateThresholdSrv\l# getZeroAngleUpdateThresholdSrv\l# setTareOrientationSrv\l# setAccelNoiseSrv\l# setGyroNoiseSrv\l# getGyroNoiseSrv\l# setMagNoiseSrv\l# getMagNoiseSrv\l# setGyroBiasModelSrv\l# getGyroBiasModelSrv\l# setMagAdaptiveValsSrv\l# getMagAdaptiveValsSrv\l# setMagDipAdaptiveValsSrv\l# getMagDipAdaptiveValsSrv\l# getSensorVehicleFrameOffsetSrv\l# getGynamicsModeSrv\l|+ ClMicrostainMips()\l+ initialize()\l+ onOrthogonalAllocation()\l+ resetFilter()\l+ deviceReport()\l+ gyroBiasCapture()\l+ setSoftIronMatrix()\l+ setComplementaryFilter()\l+ setFilterEulerService()\l+ setFilterHeading()\l+ setAccelBiasModel()\l+ setAccelAdaptiveVals()\l+ setSensorVehicleFrameTrans()\l+ setSensorVehicleFrameOffset()\l+ setAccelBias()\l+ setGyroBias()\l+ setHardIronValues()\l+ getAccelBias()\l+ getGyroBias()\l+ getHardIronValues()\l+ getSoftIronMatrix()\l+ getSensorVehicleFrameTrans()\l+ getComplementaryFilter()\l+ setReferencePosition()\l+ getReferencePosition()\l+ setConingScullingComp()\l+ getConingScullingComp()\l+ setEstimationControlFlags()\l+ getEstimationControlFlags()\l+ setDynamicsMode()\l+ getBasicStatus()\l+ getDiagnosticReport()\l+ setZeroAngleUpdateThreshold()\l+ getZeroAngleUpdateThreshold()\l+ setTareOrientation()\l+ setAccelNoise()\l+ getAccelNoise()\l+ setGyroNoise()\l+ getGyroNoise()\l+ setMagNoise()\l+ getMagNoise()\l+ setGyroBiasModel()\l+ getGyroBiasModel()\l+ getAccelAdaptiveVals()\l+ setMagAdaptiveVals()\l+ getMagAdaptiveVals()\l+ setMagDipAdaptiveVals()\l+ getAccelBiasModel()\l+ getMagDipAdaptiveVals()\l+ getSensorVehicleFrameOffset()\l+ getGynamicsMode()\l}",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node2 [label="{smacc::ISmaccClient\n||+ ISmaccClient()\l+ ~ISmaccClient()\l+ initialize()\l+ getName()\l+ postEvent()\l+ postEvent()\l+ getComponent()\l+ getComponent()\l+ getType()\l+ getStateMachine()\l+ connectSignal()\l+ requiresClient()\l+ getComponents()\l# onOrthogonalAllocation()\l# createComponent()\l# createNamedComponent()\l# setStateMachine()\l# setOrthogonal()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classsmacc_1_1ISmaccClient.html",tooltip=" "];
  Node3 -> Node2 [color="grey25",style="solid",label=" #components_" ,arrowhead="odiamond"];
  Node3 [label="{map\< smacc::ComponentKey,\l std::shared_ptr\< smacc\l::ISmaccComponent \> \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node4 -> Node2 [color="grey25",style="solid",label=" -stateMachine_" ,arrowhead="odiamond"];
  Node4 [label="{smacc::ISmaccStateMachine\n||+ ISmaccStateMachine()\l+ ~ISmaccStateMachine()\l+ reset()\l+ stop()\l+ eStop()\l+ getOrthogonal()\l+ getOrthogonals()\l+ requiresComponent()\l+ postEvent()\l+ postEvent()\l+ getTransitionLogHistory()\l+ getGlobalSMData()\l+ setGlobalSMData()\l+ mapBehavior()\l+ getStateMachineName()\l+ state_machine_visualization()\l+ getCurrentStateInfo()\l+ publishTransition()\l+ onInitialize()\l+ getTransitionLogHistory()\l+ createSignalConnection()\l+ disconnectSmaccSignalObject()\l+ notifyOnStateEntryStart()\l+ notifyOnStateEntryEnd()\l+ notifyOnRuntimeConfigured()\l+ notifyOnStateExitting()\l+ notifyOnStateExited()\l+ notifyOnRuntimeConfiguration\lFinished()\l+ getCurrentStateCounter()\l+ getCurrentState()\l+ getStateMachineInfo()\l+ buildStateMachineInfo()\l+ getNode()\l# checkStateMachineConsistence()\l# initializeROS()\l# onInitialized()\l# createOrthogonal()\l# getParam()\l# setParam()\l# param()\l- lockStateMachine()\l- unlockStateMachine()\l- propagateEventToStateReactors()\l- updateStatusMessage()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classsmacc_1_1ISmaccStateMachine.html",tooltip=" "];
  Node5 -> Node4 [color="grey25",style="solid",label=" #nh_\n#private_nh_" ,arrowhead="odiamond"];
  Node5 [label="{NodeHandle\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node6 -> Node4 [color="grey25",style="solid",label=" #timer_" ,arrowhead="odiamond"];
  Node6 [label="{Timer\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node7 -> Node4 [color="grey25",style="solid",label=" #stateMachinePub_\n#stateMachineStatusPub\l_\n#transitionLogPub_" ,arrowhead="odiamond"];
  Node7 [label="{Publisher\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node8 -> Node4 [color="grey25",style="solid",label=" #transitionHistoryService_" ,arrowhead="odiamond"];
  Node8 [label="{ServiceServer\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node9 -> Node4 [color="grey25",style="solid",label=" #currentState_" ,arrowhead="odiamond"];
  Node9 [label="{vector\< smacc::ISmaccState * \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node10 -> Node4 [color="grey25",style="solid",label=" #currentStateInfo_" ,arrowhead="odiamond"];
  Node10 [label="{shared_ptr\< smacc::\lintrospection::SmaccStateInfo \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node11 -> Node4 [color="grey25",style="solid",label=" #status_msg_" ,arrowhead="odiamond"];
  Node11 [label="{SmaccStatus\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node12 -> Node4 [color="grey25",style="solid",label=" #orthogonals_" ,arrowhead="odiamond"];
  Node12 [label="{map\< std::string, std\l::shared_ptr\< smacc::\lISmaccOrthogonal \> \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node13 -> Node4 [color="grey25",style="solid",label=" -eventQueueMutex_\n-m_mutex_" ,arrowhead="odiamond"];
  Node13 [label="{recursive_mutex\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node14 -> Node4 [color="grey25",style="solid",label=" -stateMachineCurrentAction" ,arrowhead="odiamond"];
  Node14 [label="{StateMachineInternalAction\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node15 -> Node4 [color="grey25",style="solid",label=" -stateCallbackConnections" ,arrowhead="odiamond"];
  Node15 [label="{map\< void *, std::shared\l_ptr\< smacc::CallbackCounterSemaphore \> \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node16 -> Node4 [color="grey25",style="solid",label=" -globalData_" ,arrowhead="odiamond"];
  Node16 [label="{map\< std::string, std\l::pair\< std::function\l\< std::string()\>, boost\l::any \> \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node17 -> Node4 [color="grey25",style="solid",label=" -transitionLogHistory_" ,arrowhead="odiamond"];
  Node17 [label="{vector\< smacc_msgs\l::SmaccTransitionLogEntry \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node18 -> Node4 [color="grey25",style="solid",label=" -runMode_" ,arrowhead="odiamond"];
  Node18 [label="{SMRunMode\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node19 -> Node4 [color="grey25",style="solid",label=" -signalDetector_" ,arrowhead="odiamond"];
  Node19 [label="{smacc::SignalDetector\n||+ SignalDetector()\l+ initialize()\l+ setProcessorHandle()\l+ runThread()\l+ join()\l+ stop()\l+ pollingLoop()\l+ postEvent()\l+ notifyStateConfigured()\l+ notifyStateExited()\l- pollOnce()\l- findUpdatableClients()\l- findUpdatableStateElements()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classsmacc_1_1SignalDetector.html",tooltip=" "];
  Node4 -> Node19 [color="grey25",style="solid",label=" -smaccStateMachine_" ,arrowhead="odiamond"];
  Node20 -> Node19 [color="grey25",style="solid",label=" -updatableClients_" ,arrowhead="odiamond"];
  Node20 [label="{vector\< smacc::ISmaccUpdatable * \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node21 -> Node19 [color="grey25",style="solid",label=" -updatableStateElements_" ,arrowhead="odiamond"];
  Node21 [label="{vector\< std::vector\l\< smacc::ISmaccUpdatable * \> \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node22 -> Node19 [color="grey25",style="solid",label=" -lastState_" ,arrowhead="odiamond"];
  Node22 [label="{atomic\< uint64_t \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node23 -> Node19 [color="grey25",style="solid",label=" -loop_rate_hz" ,arrowhead="odiamond"];
  Node23 [label="{double\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node24 -> Node19 [color="grey25",style="solid",label=" -end_\n-initialized_" ,arrowhead="odiamond"];
  Node24 [label="{atomic\< bool \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node5 -> Node19 [color="grey25",style="solid",label=" -nh_" ,arrowhead="odiamond"];
  Node7 -> Node19 [color="grey25",style="solid",label=" -statusPub_" ,arrowhead="odiamond"];
  Node25 -> Node19 [color="grey25",style="solid",label=" -scheduler_" ,arrowhead="odiamond"];
  Node25 [label="{SmaccFifoScheduler *\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node26 -> Node19 [color="grey25",style="solid",label=" -processorHandle_" ,arrowhead="odiamond"];
  Node26 [label="{processor_handle\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node27 -> Node19 [color="grey25",style="solid",label=" -signalDetectorThread_" ,arrowhead="odiamond"];
  Node27 [label="{thread\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node28 -> Node19 [color="grey25",style="solid",label=" -executionModel_" ,arrowhead="odiamond"];
  Node28 [label="{ExecutionModel\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node29 -> Node4 [color="grey25",style="solid",label=" -stateSeqCounter_" ,arrowhead="odiamond"];
  Node29 [label="{uint64_t\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node30 -> Node4 [color="grey25",style="solid",label=" -stateMachineInfo_" ,arrowhead="odiamond"];
  Node30 [label="{shared_ptr\< smacc::\lintrospection::SmaccStateMachine\lInfo \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node31 -> Node2 [color="grey25",style="solid",label=" -orthogonal_" ,arrowhead="odiamond"];
  Node31 [label="{smacc::ISmaccOrthogonal\n||+ setStateMachine()\l+ getStateMachine()\l+ initState()\l+ addClientBehavior()\l+ runtimeConfigure()\l+ onEntry()\l+ onExit()\l+ onDispose()\l+ getName()\l+ requiresComponent()\l+ requiresClient()\l+ getClients()\l+ getClientBehaviors()\l+ setGlobalSMData()\l+ getGlobalSMData()\l+ getClientBehavior()\l# onInitialize()\l# assignClientToOrthogonal()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classsmacc_1_1ISmaccOrthogonal.html",tooltip=" "];
  Node32 -> Node31 [color="grey25",style="solid",label=" #clients_" ,arrowhead="odiamond"];
  Node32 [label="{vector\< std::shared\l_ptr\< smacc::ISmaccClient \> \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node4 -> Node31 [color="grey25",style="solid",label=" -stateMachine_" ,arrowhead="odiamond"];
  Node33 -> Node31 [color="grey25",style="solid",label=" -clientBehaviors_" ,arrowhead="odiamond"];
  Node33 [label="{vector\< std::vector\l\< std::shared_ptr\< smacc\l::ISmaccClientBehavior \> \> \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node34 -> Node1 [color="grey25",style="solid",label=" +nodeName_" ,arrowhead="odiamond"];
  Node34 [label="{optional\< std::string \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node35 -> Node1 [color="grey25",style="solid",label=" +imuFilteredSubscriber\n+imuSubscriber" ,arrowhead="odiamond"];
  Node35 [label="{smacc::components::\lCpTopicSubscriber\< sensor\l_msgs::Imu \>\n||+ CpTopicSubscriber()\l+ CpTopicSubscriber()\l+ ~CpTopicSubscriber()\l+ onMessageReceived()\l+ onFirstMessageReceived()\l+ onOrthogonalAllocation()\l+ initialize()\l- messageCallback()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classsmacc_1_1components_1_1CpTopicSubscriber.html",tooltip=" "];
  Node36 -> Node35 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node36 [label="{smacc::ISmaccComponent\n||+ ISmaccComponent()\l+ ~ISmaccComponent()\l+ getName()\l# initialize()\l# setStateMachine()\l# postEvent()\l# postEvent()\l# onOrthogonalAllocation()\l# requiresComponent()\l# requiresClient()\l# onInitialize()\l# createSiblingComponent()\l# createSiblingNamedComponent()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classsmacc_1_1ISmaccComponent.html",tooltip=" "];
  Node4 -> Node36 [color="grey25",style="solid",label=" #stateMachine_" ,arrowhead="odiamond"];
  Node2 -> Node36 [color="grey25",style="solid",label=" #owner_" ,arrowhead="odiamond"];
  Node34 -> Node35 [color="grey25",style="solid",label=" +topicName" ,arrowhead="odiamond"];
  Node37 -> Node35 [color="grey25",style="solid",label=" +queueSize" ,arrowhead="odiamond"];
  Node37 [label="{optional\< int \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node38 -> Node35 [color="grey25",style="solid",label=" +onFirstMessageReceived\l_\n+onMessageReceived_" ,arrowhead="odiamond"];
  Node38 [label="{smacc::SmaccSignal\l\< void(const sensor\l_msgs::Imu &)\>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classsmacc_1_1SmaccSignal.html",tooltip=" "];
  Node39 -> Node38 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node39 [label="{boost::signals2::signal\l\< void(const sensor_msgs\l::Imu &), optional_last\l_value\< typename boost::function\l_traits\< void(const sensor_msgs\l::Imu &) \>::result_type \>, int,\l std::less\< int \>, function\< void\l(const sensor_msgs::Imu &) \>, typename\l extended_signature\< function_traits\l\< void(const sensor_msgs::Imu &) \>::arity,\l void(const sensor_msgs::Imu &) \>::function\l_type, boost::signals2::mutex \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node40 -> Node38 [dir="back",color="orange",style="solid",label=" \< void(const sensor\l_msgs::Imu &)\>" ];
  Node40 [label="{smacc::SmaccSignal\l\< Signature, Combiner,\l Group, GroupCompare,\l SlotFunction, ExtendedSlotFunction,\l Mutex \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classsmacc_1_1SmaccSignal.html",tooltip=" "];
  Node41 -> Node40 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node41 [label="{boost::signals2::signal\l\< Signature, optional\l_last_value\< typename boost\l::function_traits\< Signature\l \>::result_type \>, int, std\l::less\< int \>, function\< Signature\l \>, typename extended_signature\<\l function_traits\< Signature \>::arity,\l Signature \>::function_type, boost::\lsignals2::mutex \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node42 -> Node35 [color="grey25",style="solid",label=" +postInitialMessageEvent\n+postMessageEvent" ,arrowhead="odiamond"];
  Node42 [label="{function\< void(const\l sensor_msgs::Imu &)\>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classstd_1_1function_3_01void_07const_01sensor__msgs_1_1Imu_01_6_08_4.html",tooltip=" "];
  Node5 -> Node35 [color="grey25",style="solid",label=" #nh_" ,arrowhead="odiamond"];
  Node43 -> Node35 [color="grey25",style="solid",label=" -sub_" ,arrowhead="odiamond"];
  Node43 [label="{Subscriber\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node44 -> Node35 [color="grey25",style="solid",label=" -firstMessage_\n-initialized_" ,arrowhead="odiamond"];
  Node44 [label="{bool\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classbool.html",tooltip=" "];
  Node45 -> Node35 [dir="back",color="orange",style="solid",label=" \< sensor_msgs::Imu \>" ];
  Node45 [label="{smacc::components::\lCpTopicSubscriber\< Message\lType \>\n||+ CpTopicSubscriber()\l+ CpTopicSubscriber()\l+ ~CpTopicSubscriber()\l+ onMessageReceived()\l+ onFirstMessageReceived()\l+ onOrthogonalAllocation()\l+ initialize()\l- messageCallback()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classsmacc_1_1components_1_1CpTopicSubscriber.html",tooltip=" "];
  Node36 -> Node45 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node34 -> Node45 [color="grey25",style="solid",label=" +topicName" ,arrowhead="odiamond"];
  Node37 -> Node45 [color="grey25",style="solid",label=" +queueSize" ,arrowhead="odiamond"];
  Node46 -> Node45 [color="grey25",style="solid",label=" +onFirstMessageReceived\l_\n+onMessageReceived_" ,arrowhead="odiamond"];
  Node46 [label="{smacc::SmaccSignal\l\< void(const MessageType &)\>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classsmacc_1_1SmaccSignal.html",tooltip=" "];
  Node47 -> Node46 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node47 [label="{boost::signals2::signal\l\< void(const MessageType\l &), optional_last_value\l\< typename boost::function\l_traits\< void(const MessageType\l &) \>::result_type \>, int, std\l::less\< int \>, function\< void(const\l MessageType &) \>, typename extended\l_signature\< function_traits\< void(const\l MessageType &) \>::arity, void(const MessageType\l &) \>::function_type, boost::signals2::mutex \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node40 -> Node46 [dir="back",color="orange",style="solid",label=" \< void(const MessageType &)\>" ];
  Node48 -> Node45 [color="grey25",style="solid",label=" +postInitialMessageEvent\n+postMessageEvent" ,arrowhead="odiamond"];
  Node48 [label="{function\< void(const\l MessageType &)\>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node5 -> Node45 [color="grey25",style="solid",label=" #nh_" ,arrowhead="odiamond"];
  Node43 -> Node45 [color="grey25",style="solid",label=" -sub_" ,arrowhead="odiamond"];
  Node44 -> Node45 [color="grey25",style="solid",label=" -firstMessage_\n-initialized_" ,arrowhead="odiamond"];
  Node49 -> Node1 [color="grey25",style="solid",label=" +statusSubscriber" ,arrowhead="odiamond"];
  Node49 [label="{smacc::components::\lCpTopicSubscriber\< microstrain\l_mips::status_msg \>\n||+ CpTopicSubscriber()\l+ CpTopicSubscriber()\l+ ~CpTopicSubscriber()\l+ onMessageReceived()\l+ onFirstMessageReceived()\l+ onOrthogonalAllocation()\l+ initialize()\l- messageCallback()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classsmacc_1_1components_1_1CpTopicSubscriber.html",tooltip=" "];
  Node36 -> Node49 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node34 -> Node49 [color="grey25",style="solid",label=" +topicName" ,arrowhead="odiamond"];
  Node37 -> Node49 [color="grey25",style="solid",label=" +queueSize" ,arrowhead="odiamond"];
  Node50 -> Node49 [color="grey25",style="solid",label=" +onFirstMessageReceived\l_\n+onMessageReceived_" ,arrowhead="odiamond"];
  Node50 [label="{smacc::SmaccSignal\l\< void(const microstrain\l_mips::status_msg &)\>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classsmacc_1_1SmaccSignal.html",tooltip=" "];
  Node51 -> Node50 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node51 [label="{boost::signals2::signal\l\< void(const microstrain\l_mips::status_msg &), optional\l_last_value\< typename boost\l::function_traits\< void(const\l microstrain_mips::status_msg\l &) \>::result_type \>, int, std\l::less\< int \>, function\< void(const\l microstrain_mips::status_msg &) \>,\l typename extended_signature\< function\l_traits\< void(const microstrain_mips::\lstatus_msg &) \>::arity, void(const microstrain\l_mips::status_msg &) \>::function_type, boost\l::signals2::mutex \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node40 -> Node50 [dir="back",color="orange",style="solid",label=" \< void(const microstrain\l_mips::status_msg &)\>" ];
  Node52 -> Node49 [color="grey25",style="solid",label=" +postInitialMessageEvent\n+postMessageEvent" ,arrowhead="odiamond"];
  Node52 [label="{function\< void(const\l microstrain_mips::status\l_msg &)\>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classstd_1_1function_3_01void_07const_01microstrain__mips_1_1status__msg_01_6_08_4.html",tooltip=" "];
  Node5 -> Node49 [color="grey25",style="solid",label=" #nh_" ,arrowhead="odiamond"];
  Node43 -> Node49 [color="grey25",style="solid",label=" -sub_" ,arrowhead="odiamond"];
  Node44 -> Node49 [color="grey25",style="solid",label=" -firstMessage_\n-initialized_" ,arrowhead="odiamond"];
  Node45 -> Node49 [dir="back",color="orange",style="solid",label=" \< microstrain_mips\l::status_msg \>" ];
  Node5 -> Node1 [color="grey25",style="solid",label=" #nh_" ,arrowhead="odiamond"];
  Node44 -> Node1 [color="grey25",style="solid",label=" #initialized_" ,arrowhead="odiamond"];
  Node53 -> Node1 [color="grey25",style="solid",label=" #deviceReportSrv\n#getAccelAdaptiveValsSrv\n#getAccelBiasModelSrv\n#getAccelBiasSrv\n#getAccelNoiseSrv\n#getBasicStatusSrv\n#getComplementaryFilterSrv\n#getConingScullingCompSrv\n#getDiagnosticReportSrv\n#getEstimationControlFlagsSrv\n..." ,arrowhead="odiamond"];
  Node53 [label="{ServiceClient\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
}
