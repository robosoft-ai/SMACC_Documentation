digraph "smacc::ISmaccComponent"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  Node1 [label="{smacc::ISmaccComponent\n|# stateMachine_\l# owner_\l|+ ISmaccComponent()\l+ ~ISmaccComponent()\l+ getName()\l# initialize()\l# setStateMachine()\l# postEvent()\l# postEvent()\l# onOrthogonalAllocation()\l# requiresComponent()\l# requiresClient()\l# onInitialize()\l# createSiblingComponent()\l# createSiblingNamedComponent()\l}",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip=" "];
  Node1 -> Node2 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node2 [label="{smacc::components::\lCpTopicSubscriber\< sensor\l_msgs::Imu \>\n|+ topicName\l+ queueSize\l+ onFirstMessageReceived_\l+ onMessageReceived_\l+ postMessageEvent\l+ postInitialMessageEvent\l# nh_\l- sub_\l- firstMessage_\l- initialized_\l|+ CpTopicSubscriber()\l+ CpTopicSubscriber()\l+ ~CpTopicSubscriber()\l+ onMessageReceived()\l+ onFirstMessageReceived()\l+ onOrthogonalAllocation()\l+ initialize()\l- messageCallback()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classsmacc_1_1components_1_1CpTopicSubscriber.html",tooltip=" "];
  Node1 -> Node3 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node3 [label="{smacc::components::\lCpTopicSubscriber\< microstrain\l_mips::status_msg \>\n|+ topicName\l+ queueSize\l+ onFirstMessageReceived_\l+ onMessageReceived_\l+ postMessageEvent\l+ postInitialMessageEvent\l# nh_\l- sub_\l- firstMessage_\l- initialized_\l|+ CpTopicSubscriber()\l+ CpTopicSubscriber()\l+ ~CpTopicSubscriber()\l+ onMessageReceived()\l+ onFirstMessageReceived()\l+ onOrthogonalAllocation()\l+ initialize()\l- messageCallback()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classsmacc_1_1components_1_1CpTopicSubscriber.html",tooltip=" "];
  Node1 -> Node4 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node4 [label="{cl_move_base_z::CostmapSwitch\n|+ layerNames\l- costmapProxies\l- moveBaseClient_\l|+ CostmapSwitch()\l+ onInitialize()\l+ exists()\l+ enable()\l+ enable()\l+ disable()\l+ disable()\l+ registerProxyFromDynamic\lReconfigureServer()\l+ getStandardCostmapName()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classcl__move__base__z_1_1CostmapSwitch.html",tooltip=" "];
  Node1 -> Node5 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node5 [label="{cl_move_base_z::CpTFListener\n|- m_mutex_\l- poseTracks_\l- tfListener_\l- listenerMutex_\l|+ CpTFListener()\l+ update()\l+ getLastTransform()\l+ waitForNextTransform()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classcl__move__base__z_1_1CpTFListener.html",tooltip=" "];
  Node1 -> Node6 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node6 [label="{cl_move_base_z::PlannerSwitcher\n|- desired_global_planner_\l- desired_local_planner_\l- dynrecofSub_\l- set_planners_mode_flag\l|+ PlannerSwitcher()\l+ setBackwardPlanner()\l+ setUndoPathBackwardsPlanner\lConfiguration()\l+ setUndoPathPureSpinningPlanner\lConfiguration()\l+ setForwardPlanner()\l+ setPureSpinningPlanner()\l+ onInitialize()\l+ setDefaultPlanners()\l- updatePlanners()\l- dynreconfCallback()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classcl__move__base__z_1_1PlannerSwitcher.html",tooltip=" "];
  Node1 -> Node7 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node7 [label="{cl_move_base_z::Pose\n|+ isInitialized\l- pose_\l- poseFrameName_\l- referenceFrame_\l- m_mutex_\l- tfListener_\l- listenerMutex_\l|+ Pose()\l+ update()\l+ waitTransformUpdate()\l+ toPoseMsg()\l+ toPoseStampedMsg()\l+ getReferenceFrame()\l+ getFrameId()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classcl__move__base__z_1_1Pose.html",tooltip=" "];
  Node1 -> Node8 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node8 [label="{cl_move_base_z::Waypoint\lNavigator\n|+ waypointsEventDispatcher\l+ client_\l+ currentWaypoint_\l- waypoints_\l- succeddedConnection_\l|+ WaypointNavigator()\l+ onInitialize()\l+ insertWaypoint()\l+ removeWaypoint()\l+ loadWayPointsFromFile()\l+ setWaypoints()\l+ setWaypoints()\l+ sendNextGoal()\l+ getWaypoints()\l+ getCurrentWaypointIndex()\l+ onOrthogonalAllocation()\l- onGoalReached()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classcl__move__base__z_1_1WaypointNavigator.html",tooltip=" "];
  Node1 -> Node9 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node9 [label="{cl_move_base_z::odom\l_tracker::OdomTracker\n|# paramServer_\l# f\l# robotBasePathPub_\l# robotBasePathStackedPub_\l# odomSub_\l# recordPointDistanceThreshold_\l# recordAngularDistanceThreshold_\l# clearPointDistanceThreshold_\l# clearAngularDistanceThreshold_\l# odomFrame_\l# publishMessages\l# baseTrajectory_\l# workingMode_\l# pathStack_\l# aggregatedStackPathMsg_\l# subscribeToOdometryTopic_\l# currentPathTagName_\l# m_mutex_\l|+ OdomTracker()\l+ processOdometryMessage()\l+ setWorkingMode()\l+ setPublishMessages()\l+ pushPath()\l+ popPath()\l+ clearPath()\l+ setStartPoint()\l+ setStartPoint()\l+ getPath()\l+ logStateString()\l+ getStackedPaths()\l# reconfigCB()\l# rtPublishPaths()\l# updateRecordPath()\l# updateClearPath()\l# updateAggregatedStackPath()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classcl__move__base__z_1_1odom__tracker_1_1OdomTracker.html",tooltip="This class track the required distance of the cord based on the external localization system."];
  Node1 -> Node10 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node10 [label="{cl_move_group_interface\l::CpTrajectoryHistory\n|- trajectoryHistory_\l|+ getLastTrajectory()\l+ getLastTrajectory()\l+ pushTrajectory()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classcl__move__group__interface_1_1CpTrajectoryHistory.html",tooltip=" "];
  Node1 -> Node11 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node11 [label="{cl_move_group_interface\l::GraspingComponent\n|+ fingerTipNames\l+ currentAttachedObjectName\l- graspingObjects\l|+ getGraspingObject()\l+ createGraspableBox()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classcl__move__group__interface_1_1GraspingComponent.html",tooltip=" "];
  Node1 -> Node12 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node12 [label="{smacc::components::\lCpRosControlInterface\n|+ serviceName_\l- nh_\l- srvListControllers\l- srvListControllersTypes\l- srvLoadController\l- srvReloadControllerLibraries\l- srvSwitchControllers\l- srvUnloadController\l|+ CpRosControlInterface()\l+ ~CpRosControlInterface()\l+ onInitialize()\l+ listControllerTypes()\l+ listControllers()\l+ loadController()\l+ unloadController()\l+ reloadControllerLibraries()\l+ switchControllers()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classsmacc_1_1components_1_1CpRosControlInterface.html",tooltip=" "];
  Node1 -> Node13 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node13 [label="{smacc::components::\lCpTopicSubscriber\< Message\lType \>\n|+ topicName\l+ queueSize\l+ onFirstMessageReceived_\l+ onMessageReceived_\l+ postMessageEvent\l+ postInitialMessageEvent\l# nh_\l- sub_\l- firstMessage_\l- initialized_\l|+ CpTopicSubscriber()\l+ CpTopicSubscriber()\l+ ~CpTopicSubscriber()\l+ onMessageReceived()\l+ onFirstMessageReceived()\l+ onOrthogonalAllocation()\l+ initialize()\l- messageCallback()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classsmacc_1_1components_1_1CpTopicSubscriber.html",tooltip=" "];
  Node13 -> Node2 [dir="back",color="orange",style="solid",label=" \< sensor_msgs::Imu \>" ];
  Node13 -> Node3 [dir="back",color="orange",style="solid",label=" \< microstrain_mips\l::status_msg \>" ];
}
