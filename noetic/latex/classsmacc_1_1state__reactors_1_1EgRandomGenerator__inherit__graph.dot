digraph "smacc::state_reactors::EgRandomGenerator"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  Node1 [label="{smacc::state_reactors\l::EgRandomGenerator\n|+ mode_\l- postEventA\l- postEventB\l- postEventC\l- evAMin_\l- evAMax_\l- evBMin_\l- evBMax_\l- evCMin_\l- evCMax_\l- minValue\l- maxValue\l|+ EgRandomGenerator()\l+ onEntry()\l+ onStateAllocation()\l+ postRandomEvents()\l+ update()\l}",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node2 [label="{smacc::SmaccEventGenerator\n|- ownerState_\l- ISmaccStateMachine\l|+ SmaccEventGenerator()\l+ ~SmaccEventGenerator()\l+ onStateAllocation()\l+ onEntry()\l+ onExit()\l+ postEvent()\l+ postEvent()\l+ initialize()\l+ onInitialized()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classsmacc_1_1SmaccEventGenerator.html",tooltip=" "];
  Node3 -> Node1 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node3 [label="{smacc::ISmaccUpdatable\n|- periodDuration_\l- lastUpdate_\l|+ ISmaccUpdatable()\l+ ISmaccUpdatable()\l+ executeUpdate()\l+ setUpdatePeriod()\l# update()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classsmacc_1_1ISmaccUpdatable.html",tooltip=" "];
}
