digraph "smacc::default_events::EvActionFeedback&lt; ActionFeedback, TOrthogonal &gt;"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  Node1 [label="{smacc::default_events\l::EvActionFeedback\< ActionFeedback,\l TOrthogonal \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node2 [label="{boost::statechart::\levent\< EvActionFeedback\l\< ActionFeedback, TOrthogonal \> \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classboost_1_1statechart_1_1event.html",tooltip=" "];
  Node3 -> Node1 [color="grey25",style="solid",label=" +client" ,arrowhead="odiamond"];
  Node3 [label="{smacc::client_bases\l::ISmaccActionClient\n||+ ISmaccActionClient()\l+ ~ISmaccActionClient()\l+ getNamespace()\l+ cancelGoal()\l+ getState()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classsmacc_1_1client__bases_1_1ISmaccActionClient.html",tooltip=" "];
  Node4 -> Node3 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node4 [label="{smacc::ISmaccClient\n||+ ISmaccClient()\l+ ~ISmaccClient()\l+ initialize()\l+ getName()\l+ postEvent()\l+ postEvent()\l+ getComponent()\l+ getComponent()\l+ getType()\l+ getStateMachine()\l+ connectSignal()\l+ requiresClient()\l+ getComponents()\l# onOrthogonalAllocation()\l# createComponent()\l# createNamedComponent()\l# setStateMachine()\l# setOrthogonal()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classsmacc_1_1ISmaccClient.html",tooltip=" "];
  Node5 -> Node4 [color="grey25",style="solid",label=" #components_" ,arrowhead="odiamond"];
  Node5 [label="{map\< smacc::ComponentKey,\l std::shared_ptr\< smacc\l::ISmaccComponent \> \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node6 -> Node4 [color="grey25",style="solid",label=" -stateMachine_" ,arrowhead="odiamond"];
  Node6 [label="{smacc::ISmaccStateMachine\n||+ ISmaccStateMachine()\l+ ~ISmaccStateMachine()\l+ reset()\l+ stop()\l+ eStop()\l+ getOrthogonal()\l+ getOrthogonals()\l+ requiresComponent()\l+ postEvent()\l+ postEvent()\l+ getTransitionLogHistory()\l+ getGlobalSMData()\l+ setGlobalSMData()\l+ mapBehavior()\l+ getStateMachineName()\l+ state_machine_visualization()\l+ getCurrentStateInfo()\l+ publishTransition()\l+ onInitialize()\l+ getTransitionLogHistory()\l+ createSignalConnection()\l+ disconnectSmaccSignalObject()\l+ notifyOnStateEntryStart()\l+ notifyOnStateEntryEnd()\l+ notifyOnRuntimeConfigured()\l+ notifyOnStateExitting()\l+ notifyOnStateExited()\l+ notifyOnRuntimeConfiguration\lFinished()\l+ getCurrentStateCounter()\l+ getCurrentState()\l+ getStateMachineInfo()\l+ buildStateMachineInfo()\l+ getNode()\l# checkStateMachineConsistence()\l# initializeROS()\l# onInitialized()\l# createOrthogonal()\l# getParam()\l# setParam()\l# param()\l- lockStateMachine()\l- unlockStateMachine()\l- propagateEventToStateReactors()\l- updateStatusMessage()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classsmacc_1_1ISmaccStateMachine.html",tooltip=" "];
  Node7 -> Node6 [color="grey25",style="solid",label=" #nh_\n#private_nh_" ,arrowhead="odiamond"];
  Node7 [label="{NodeHandle\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node8 -> Node6 [color="grey25",style="solid",label=" #timer_" ,arrowhead="odiamond"];
  Node8 [label="{Timer\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node9 -> Node6 [color="grey25",style="solid",label=" #stateMachinePub_\n#stateMachineStatusPub\l_\n#transitionLogPub_" ,arrowhead="odiamond"];
  Node9 [label="{Publisher\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node10 -> Node6 [color="grey25",style="solid",label=" #transitionHistoryService_" ,arrowhead="odiamond"];
  Node10 [label="{ServiceServer\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node11 -> Node6 [color="grey25",style="solid",label=" #currentState_" ,arrowhead="odiamond"];
  Node11 [label="{vector\< smacc::ISmaccState * \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node12 -> Node6 [color="grey25",style="solid",label=" #currentStateInfo_" ,arrowhead="odiamond"];
  Node12 [label="{shared_ptr\< smacc::\lintrospection::SmaccStateInfo \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node13 -> Node6 [color="grey25",style="solid",label=" #status_msg_" ,arrowhead="odiamond"];
  Node13 [label="{SmaccStatus\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node14 -> Node6 [color="grey25",style="solid",label=" #orthogonals_" ,arrowhead="odiamond"];
  Node14 [label="{map\< std::string, std\l::shared_ptr\< smacc::\lISmaccOrthogonal \> \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node15 -> Node6 [color="grey25",style="solid",label=" -eventQueueMutex_\n-m_mutex_" ,arrowhead="odiamond"];
  Node15 [label="{recursive_mutex\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node16 -> Node6 [color="grey25",style="solid",label=" -stateMachineCurrentAction" ,arrowhead="odiamond"];
  Node16 [label="{StateMachineInternalAction\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node17 -> Node6 [color="grey25",style="solid",label=" -stateCallbackConnections" ,arrowhead="odiamond"];
  Node17 [label="{map\< void *, std::shared\l_ptr\< smacc::CallbackCounterSemaphore \> \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node18 -> Node6 [color="grey25",style="solid",label=" -globalData_" ,arrowhead="odiamond"];
  Node18 [label="{map\< std::string, std\l::pair\< std::function\l\< std::string()\>, boost\l::any \> \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node19 -> Node6 [color="grey25",style="solid",label=" -transitionLogHistory_" ,arrowhead="odiamond"];
  Node19 [label="{vector\< smacc_msgs\l::SmaccTransitionLogEntry \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node20 -> Node6 [color="grey25",style="solid",label=" -runMode_" ,arrowhead="odiamond"];
  Node20 [label="{SMRunMode\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node21 -> Node6 [color="grey25",style="solid",label=" -signalDetector_" ,arrowhead="odiamond"];
  Node21 [label="{smacc::SignalDetector\n||+ SignalDetector()\l+ initialize()\l+ setProcessorHandle()\l+ runThread()\l+ join()\l+ stop()\l+ pollingLoop()\l+ postEvent()\l+ notifyStateConfigured()\l+ notifyStateExited()\l- pollOnce()\l- findUpdatableClients()\l- findUpdatableStateElements()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classsmacc_1_1SignalDetector.html",tooltip=" "];
  Node6 -> Node21 [color="grey25",style="solid",label=" -smaccStateMachine_" ,arrowhead="odiamond"];
  Node22 -> Node21 [color="grey25",style="solid",label=" -updatableClients_" ,arrowhead="odiamond"];
  Node22 [label="{vector\< smacc::ISmaccUpdatable * \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node23 -> Node21 [color="grey25",style="solid",label=" -updatableStateElements_" ,arrowhead="odiamond"];
  Node23 [label="{vector\< std::vector\l\< smacc::ISmaccUpdatable * \> \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node24 -> Node21 [color="grey25",style="solid",label=" -lastState_" ,arrowhead="odiamond"];
  Node24 [label="{atomic\< uint64_t \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node25 -> Node21 [color="grey25",style="solid",label=" -loop_rate_hz" ,arrowhead="odiamond"];
  Node25 [label="{double\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node26 -> Node21 [color="grey25",style="solid",label=" -end_\n-initialized_" ,arrowhead="odiamond"];
  Node26 [label="{atomic\< bool \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node7 -> Node21 [color="grey25",style="solid",label=" -nh_" ,arrowhead="odiamond"];
  Node9 -> Node21 [color="grey25",style="solid",label=" -statusPub_" ,arrowhead="odiamond"];
  Node27 -> Node21 [color="grey25",style="solid",label=" -scheduler_" ,arrowhead="odiamond"];
  Node27 [label="{SmaccFifoScheduler *\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node28 -> Node21 [color="grey25",style="solid",label=" -processorHandle_" ,arrowhead="odiamond"];
  Node28 [label="{processor_handle\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node29 -> Node21 [color="grey25",style="solid",label=" -signalDetectorThread_" ,arrowhead="odiamond"];
  Node29 [label="{thread\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node30 -> Node21 [color="grey25",style="solid",label=" -executionModel_" ,arrowhead="odiamond"];
  Node30 [label="{ExecutionModel\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node31 -> Node6 [color="grey25",style="solid",label=" -stateSeqCounter_" ,arrowhead="odiamond"];
  Node31 [label="{uint64_t\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node32 -> Node6 [color="grey25",style="solid",label=" -stateMachineInfo_" ,arrowhead="odiamond"];
  Node32 [label="{shared_ptr\< smacc::\lintrospection::SmaccStateMachine\lInfo \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node33 -> Node4 [color="grey25",style="solid",label=" -orthogonal_" ,arrowhead="odiamond"];
  Node33 [label="{smacc::ISmaccOrthogonal\n||+ setStateMachine()\l+ getStateMachine()\l+ initState()\l+ addClientBehavior()\l+ runtimeConfigure()\l+ onEntry()\l+ onExit()\l+ onDispose()\l+ getName()\l+ requiresComponent()\l+ requiresClient()\l+ getClients()\l+ getClientBehaviors()\l+ setGlobalSMData()\l+ getGlobalSMData()\l+ getClientBehavior()\l# onInitialize()\l# assignClientToOrthogonal()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classsmacc_1_1ISmaccOrthogonal.html",tooltip=" "];
  Node34 -> Node33 [color="grey25",style="solid",label=" #clients_" ,arrowhead="odiamond"];
  Node34 [label="{vector\< std::shared\l_ptr\< smacc::ISmaccClient \> \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node6 -> Node33 [color="grey25",style="solid",label=" -stateMachine_" ,arrowhead="odiamond"];
  Node35 -> Node33 [color="grey25",style="solid",label=" -clientBehaviors_" ,arrowhead="odiamond"];
  Node35 [label="{vector\< std::vector\l\< std::shared_ptr\< smacc\l::ISmaccClientBehavior \> \> \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node36 -> Node3 [color="grey25",style="solid",label=" #name_" ,arrowhead="odiamond"];
  Node36 [label="{string\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node37 -> Node1 [color="grey25",style="solid",label=" +feedbackMessage" ,arrowhead="odiamond"];
  Node37 [label="{ActionFeedback\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
}
