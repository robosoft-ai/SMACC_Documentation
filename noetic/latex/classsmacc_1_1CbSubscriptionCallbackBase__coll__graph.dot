digraph "smacc::CbSubscriptionCallbackBase&lt; TMsg &gt;"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  Node1 [label="{smacc::CbSubscriptionCallback\lBase\< TMsg \>\n||+ onEntry()\l+ onMessageReceived()\l}",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node2 [label="{smacc::SmaccClientBehavior\n||+ onEntry()\l+ onExit()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classsmacc_1_1SmaccClientBehavior.html",tooltip=" "];
  Node3 -> Node2 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node3 [label="{smacc::ISmaccClientBehavior\n||+ ISmaccClientBehavior()\l+ ~ISmaccClientBehavior()\l+ getStateMachine()\l+ getName()\l+ requiresClient()\l+ requiresComponent()\l+ getNode()\l# runtimeConfigure()\l# onEntry()\l# onExit()\l# postEvent()\l# postEvent()\l# getCurrentState()\l# executeOnEntry()\l# executeOnExit()\l# dispose()\l- onOrthogonalAllocation()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classsmacc_1_1ISmaccClientBehavior.html",tooltip=" "];
  Node4 -> Node3 [color="grey25",style="solid",label=" -stateMachine_" ,arrowhead="odiamond"];
  Node4 [label="{smacc::ISmaccStateMachine\n||+ ISmaccStateMachine()\l+ ~ISmaccStateMachine()\l+ reset()\l+ stop()\l+ eStop()\l+ getOrthogonal()\l+ getOrthogonals()\l+ requiresComponent()\l+ postEvent()\l+ postEvent()\l+ getTransitionLogHistory()\l+ getGlobalSMData()\l+ setGlobalSMData()\l+ mapBehavior()\l+ getStateMachineName()\l+ state_machine_visualization()\l+ getCurrentStateInfo()\l+ publishTransition()\l+ onInitialize()\l+ getTransitionLogHistory()\l+ createSignalConnection()\l+ disconnectSmaccSignalObject()\l+ notifyOnStateEntryStart()\l+ notifyOnStateEntryEnd()\l+ notifyOnRuntimeConfigured()\l+ notifyOnStateExitting()\l+ notifyOnStateExited()\l+ notifyOnRuntimeConfiguration\lFinished()\l+ getCurrentStateCounter()\l+ getCurrentState()\l+ getStateMachineInfo()\l+ buildStateMachineInfo()\l+ getNode()\l# checkStateMachineConsistence()\l# initializeROS()\l# onInitialized()\l# createOrthogonal()\l# getParam()\l# setParam()\l# param()\l- lockStateMachine()\l- unlockStateMachine()\l- propagateEventToStateReactors()\l- updateStatusMessage()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classsmacc_1_1ISmaccStateMachine.html",tooltip=" "];
  Node5 -> Node4 [color="grey25",style="solid",label=" #nh_\n#private_nh_" ,arrowhead="odiamond"];
  Node5 [label="{NodeHandle\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node6 -> Node4 [color="grey25",style="solid",label=" #timer_" ,arrowhead="odiamond"];
  Node6 [label="{Timer\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node7 -> Node4 [color="grey25",style="solid",label=" #stateMachinePub_\n#stateMachineStatusPub\l_\n#transitionLogPub_" ,arrowhead="odiamond"];
  Node7 [label="{Publisher\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node8 -> Node4 [color="grey25",style="solid",label=" #transitionHistoryService_" ,arrowhead="odiamond"];
  Node8 [label="{ServiceServer\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node9 -> Node4 [color="grey25",style="solid",label=" #currentState_" ,arrowhead="odiamond"];
  Node9 [label="{vector\< smacc::ISmaccState * \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node10 -> Node4 [color="grey25",style="solid",label=" #currentStateInfo_" ,arrowhead="odiamond"];
  Node10 [label="{shared_ptr\< smacc::\lintrospection::SmaccStateInfo \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node11 -> Node4 [color="grey25",style="solid",label=" #status_msg_" ,arrowhead="odiamond"];
  Node11 [label="{SmaccStatus\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node12 -> Node4 [color="grey25",style="solid",label=" #orthogonals_" ,arrowhead="odiamond"];
  Node12 [label="{map\< std::string, std\l::shared_ptr\< smacc::\lISmaccOrthogonal \> \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node13 -> Node4 [color="grey25",style="solid",label=" -eventQueueMutex_\n-m_mutex_" ,arrowhead="odiamond"];
  Node13 [label="{recursive_mutex\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node14 -> Node4 [color="grey25",style="solid",label=" -stateMachineCurrentAction" ,arrowhead="odiamond"];
  Node14 [label="{StateMachineInternalAction\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node15 -> Node4 [color="grey25",style="solid",label=" -stateCallbackConnections" ,arrowhead="odiamond"];
  Node15 [label="{map\< void *, std::shared\l_ptr\< smacc::CallbackCounterSemaphore \> \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node16 -> Node4 [color="grey25",style="solid",label=" -globalData_" ,arrowhead="odiamond"];
  Node16 [label="{map\< std::string, std\l::pair\< std::function\l\< std::string()\>, boost\l::any \> \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node17 -> Node4 [color="grey25",style="solid",label=" -transitionLogHistory_" ,arrowhead="odiamond"];
  Node17 [label="{vector\< smacc_msgs\l::SmaccTransitionLogEntry \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node18 -> Node4 [color="grey25",style="solid",label=" -runMode_" ,arrowhead="odiamond"];
  Node18 [label="{SMRunMode\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node19 -> Node4 [color="grey25",style="solid",label=" -signalDetector_" ,arrowhead="odiamond"];
  Node19 [label="{smacc::SignalDetector\n||+ SignalDetector()\l+ initialize()\l+ setProcessorHandle()\l+ runThread()\l+ join()\l+ stop()\l+ pollingLoop()\l+ postEvent()\l+ notifyStateConfigured()\l+ notifyStateExited()\l- pollOnce()\l- findUpdatableClients()\l- findUpdatableStateElements()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classsmacc_1_1SignalDetector.html",tooltip=" "];
  Node4 -> Node19 [color="grey25",style="solid",label=" -smaccStateMachine_" ,arrowhead="odiamond"];
  Node20 -> Node19 [color="grey25",style="solid",label=" -updatableClients_" ,arrowhead="odiamond"];
  Node20 [label="{vector\< smacc::ISmaccUpdatable * \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node21 -> Node19 [color="grey25",style="solid",label=" -updatableStateElements_" ,arrowhead="odiamond"];
  Node21 [label="{vector\< std::vector\l\< smacc::ISmaccUpdatable * \> \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node22 -> Node19 [color="grey25",style="solid",label=" -lastState_" ,arrowhead="odiamond"];
  Node22 [label="{atomic\< uint64_t \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node23 -> Node19 [color="grey25",style="solid",label=" -loop_rate_hz" ,arrowhead="odiamond"];
  Node23 [label="{double\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node24 -> Node19 [color="grey25",style="solid",label=" -end_\n-initialized_" ,arrowhead="odiamond"];
  Node24 [label="{atomic\< bool \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node5 -> Node19 [color="grey25",style="solid",label=" -nh_" ,arrowhead="odiamond"];
  Node7 -> Node19 [color="grey25",style="solid",label=" -statusPub_" ,arrowhead="odiamond"];
  Node25 -> Node19 [color="grey25",style="solid",label=" -scheduler_" ,arrowhead="odiamond"];
  Node25 [label="{SmaccFifoScheduler *\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node26 -> Node19 [color="grey25",style="solid",label=" -processorHandle_" ,arrowhead="odiamond"];
  Node26 [label="{processor_handle\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node27 -> Node19 [color="grey25",style="solid",label=" -signalDetectorThread_" ,arrowhead="odiamond"];
  Node27 [label="{thread\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node28 -> Node19 [color="grey25",style="solid",label=" -executionModel_" ,arrowhead="odiamond"];
  Node28 [label="{ExecutionModel\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node29 -> Node4 [color="grey25",style="solid",label=" -stateSeqCounter_" ,arrowhead="odiamond"];
  Node29 [label="{uint64_t\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node30 -> Node4 [color="grey25",style="solid",label=" -stateMachineInfo_" ,arrowhead="odiamond"];
  Node30 [label="{shared_ptr\< smacc::\lintrospection::SmaccStateMachine\lInfo \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node31 -> Node3 [color="grey25",style="solid",label=" -currentState" ,arrowhead="odiamond"];
  Node31 [label="{smacc::ISmaccState\n||+ getStateMachine()\l+ getParentState()\l+ getROSNode()\l+ getClassName()\l+ configure()\l+ requiresComponent()\l+ requiresClient()\l+ getGlobalSMData()\l+ setGlobalSMData()\l+ createStateReactor()\l+ createStateReactor()\l+ createEventGenerator()\l+ postEvent()\l+ postEvent()\l+ notifyTransition()\l+ notifyTransitionFromTransition\lTypeInfo()\l+ getStateReactors()\l+ getEventGenerators()\l+ getParam()\l+ setParam()\l+ param()\l+ getOrthogonal()\l+ getEventGenerator()\l+ getStateReactor()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classsmacc_1_1ISmaccState.html",tooltip=" "];
  Node32 -> Node31 [color="grey25",style="solid",label=" #stateReactors_" ,arrowhead="odiamond"];
  Node32 [label="{vector\< std::shared\l_ptr\< smacc::StateReactor \> \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node33 -> Node31 [color="grey25",style="solid",label=" #eventGenerators_" ,arrowhead="odiamond"];
  Node33 [label="{vector\< std::shared\l_ptr\< smacc::SmaccEventGenerator \> \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node5 -> Node31 [color="grey25",style="solid",label=" #contextNh\n#nh" ,arrowhead="odiamond"];
  Node31 -> Node31 [color="grey25",style="solid",label=" #parentState_" ,arrowhead="odiamond"];
  Node34 -> Node31 [color="grey25",style="solid",label=" #stateInfo_" ,arrowhead="odiamond"];
  Node34 [label="{smacc::introspection\l::SmaccStateInfo\n||+ SmaccStateInfo()\l+ getStateLevel()\l+ depth()\l+ getAncestors()\l+ getFullPath()\l+ createChildState()\l+ declareTransition()\l+ toShortName()\l+ getDemangledFullName()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classsmacc_1_1introspection_1_1SmaccStateInfo.html",tooltip=" "];
  Node35 -> Node34 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node35 [label="{std::enable_shared\l_from_this\< SmaccStateInfo \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node36 -> Node34 [color="grey25",style="solid",label=" +staticBehaviorInfo" ,arrowhead="odiamond"];
  Node36 [label="{map\< const std::type\l_info *, std::vector\l\< smacc::introspection\l::ClientBehaviorInfoEntry \> \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node37 -> Node34 [color="grey25",style="solid",label=" +stateReactorsInfo" ,arrowhead="odiamond"];
  Node37 [label="{map\< const std::type\l_info *, std::vector\l\< std::shared_ptr\< smacc\l::introspection::SmaccStateReactor\lInfo \> \> \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node38 -> Node34 [color="grey25",style="solid",label=" +eventGeneratorsInfo" ,arrowhead="odiamond"];
  Node38 [label="{map\< const std::type\l_info *, std::vector\l\< std::shared_ptr\< smacc\l::introspection::SmaccEventGenerator\lInfo \> \> \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node39 -> Node34 [color="grey25",style="solid",label=" +depth_\n+stateIndex_" ,arrowhead="odiamond"];
  Node39 [label="{int\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node40 -> Node34 [color="grey25",style="solid",label=" +demangledStateName\n+fullStateName" ,arrowhead="odiamond"];
  Node40 [label="{string\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node30 -> Node34 [color="grey25",style="solid",label=" +stateMachine_" ,arrowhead="odiamond"];
  Node10 -> Node34 [color="grey25",style="solid",label=" +parentState_" ,arrowhead="odiamond"];
  Node41 -> Node34 [color="grey25",style="solid",label=" +transitions_" ,arrowhead="odiamond"];
  Node41 [label="{vector\< smacc::introspection\l::SmaccTransitionInfo \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node42 -> Node34 [color="grey25",style="solid",label=" +children_" ,arrowhead="odiamond"];
  Node42 [label="{vector\< std::shared\l_ptr\< smacc::introspection\l::SmaccStateInfo \> \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node43 -> Node34 [color="grey25",style="solid",label=" +tid_" ,arrowhead="odiamond"];
  Node43 [label="{type_info *\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node44 -> Node3 [color="grey25",style="solid",label=" -currentOrthogonal" ,arrowhead="odiamond"];
  Node44 [label="{smacc::ISmaccOrthogonal\n||+ setStateMachine()\l+ getStateMachine()\l+ initState()\l+ addClientBehavior()\l+ runtimeConfigure()\l+ onEntry()\l+ onExit()\l+ onDispose()\l+ getName()\l+ requiresComponent()\l+ requiresClient()\l+ getClients()\l+ getClientBehaviors()\l+ setGlobalSMData()\l+ getGlobalSMData()\l+ getClientBehavior()\l# onInitialize()\l# assignClientToOrthogonal()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classsmacc_1_1ISmaccOrthogonal.html",tooltip=" "];
  Node45 -> Node44 [color="grey25",style="solid",label=" #clients_" ,arrowhead="odiamond"];
  Node45 [label="{vector\< std::shared\l_ptr\< smacc::ISmaccClient \> \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node4 -> Node44 [color="grey25",style="solid",label=" -stateMachine_" ,arrowhead="odiamond"];
  Node46 -> Node44 [color="grey25",style="solid",label=" -clientBehaviors_" ,arrowhead="odiamond"];
  Node46 [label="{vector\< std::vector\l\< std::shared_ptr\< smacc\l::ISmaccClientBehavior \> \> \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node47 -> Node1 [color="grey25",style="solid",label=" #attachedClient_" ,arrowhead="odiamond"];
  Node47 [label="{smacc::client_bases\l::SmaccSubscriberClient\l\< TMsg \>\n||+ SmaccSubscriberClient()\l+ SmaccSubscriberClient()\l+ ~SmaccSubscriberClient()\l+ onMessageReceived()\l+ onFirstMessageReceived()\l+ onOrthogonalAllocation()\l+ initialize()\l- messageCallback()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classsmacc_1_1client__bases_1_1SmaccSubscriberClient.html",tooltip=" "];
  Node48 -> Node47 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node48 [label="{smacc::ISmaccClient\n||+ ISmaccClient()\l+ ~ISmaccClient()\l+ initialize()\l+ getName()\l+ postEvent()\l+ postEvent()\l+ getComponent()\l+ getComponent()\l+ getType()\l+ getStateMachine()\l+ connectSignal()\l+ requiresClient()\l+ getComponents()\l# onOrthogonalAllocation()\l# createComponent()\l# createNamedComponent()\l# setStateMachine()\l# setOrthogonal()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classsmacc_1_1ISmaccClient.html",tooltip=" "];
  Node49 -> Node48 [color="grey25",style="solid",label=" #components_" ,arrowhead="odiamond"];
  Node49 [label="{map\< smacc::ComponentKey,\l std::shared_ptr\< smacc\l::ISmaccComponent \> \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node4 -> Node48 [color="grey25",style="solid",label=" -stateMachine_" ,arrowhead="odiamond"];
  Node44 -> Node48 [color="grey25",style="solid",label=" -orthogonal_" ,arrowhead="odiamond"];
  Node50 -> Node47 [color="grey25",style="solid",label=" +topicName" ,arrowhead="odiamond"];
  Node50 [label="{optional\< std::string \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node51 -> Node47 [color="grey25",style="solid",label=" +queueSize" ,arrowhead="odiamond"];
  Node51 [label="{optional\< int \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node52 -> Node47 [color="grey25",style="solid",label=" +onFirstMessageReceived\l_\n+onMessageReceived_" ,arrowhead="odiamond"];
  Node52 [label="{smacc::SmaccSignal\l\< void(const TMsg &)\>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classsmacc_1_1SmaccSignal.html",tooltip=" "];
  Node53 -> Node52 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node53 [label="{boost::signals2::signal\l\< void(const TMsg &),\l optional_last_value\< typename\l boost::function_traits\< void\l(const TMsg &) \>::result_type\l \>, int, std::less\< int \>, function\l\< void(const TMsg &) \>, typename extended\l_signature\< function_traits\< void(const\l TMsg &) \>::arity, void(const TMsg &) \>\l::function_type, boost::signals2::mutex \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node54 -> Node52 [dir="back",color="orange",style="solid",label=" \< void(const TMsg &)\>" ];
  Node54 [label="{smacc::SmaccSignal\l\< Signature, Combiner,\l Group, GroupCompare,\l SlotFunction, ExtendedSlotFunction,\l Mutex \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classsmacc_1_1SmaccSignal.html",tooltip=" "];
  Node55 -> Node54 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node55 [label="{boost::signals2::signal\l\< Signature, optional\l_last_value\< typename boost\l::function_traits\< Signature\l \>::result_type \>, int, std\l::less\< int \>, function\< Signature\l \>, typename extended_signature\<\l function_traits\< Signature \>::arity,\l Signature \>::function_type, boost::\lsignals2::mutex \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node56 -> Node47 [color="grey25",style="solid",label=" +postInitialMessageEvent\n+postMessageEvent" ,arrowhead="odiamond"];
  Node56 [label="{function\< void(const\l TMsg &)\>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classstd_1_1function_3_01void_07const_01TMsg_01_6_08_4.html",tooltip=" "];
  Node5 -> Node47 [color="grey25",style="solid",label=" #nh_" ,arrowhead="odiamond"];
  Node57 -> Node47 [color="grey25",style="solid",label=" -sub_" ,arrowhead="odiamond"];
  Node57 [label="{Subscriber\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node58 -> Node47 [color="grey25",style="solid",label=" -firstMessage_\n-initialized_" ,arrowhead="odiamond"];
  Node58 [label="{bool\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classbool.html",tooltip=" "];
  Node59 -> Node47 [dir="back",color="orange",style="solid",label=" \< TMsg \>" ];
  Node59 [label="{smacc::client_bases\l::SmaccSubscriberClient\l\< MessageType \>\n||+ SmaccSubscriberClient()\l+ SmaccSubscriberClient()\l+ ~SmaccSubscriberClient()\l+ onMessageReceived()\l+ onFirstMessageReceived()\l+ onOrthogonalAllocation()\l+ initialize()\l- messageCallback()\l}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classsmacc_1_1client__bases_1_1SmaccSubscriberClient.html",tooltip=" "];
  Node48 -> Node59 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node50 -> Node59 [color="grey25",style="solid",label=" +topicName" ,arrowhead="odiamond"];
  Node51 -> Node59 [color="grey25",style="solid",label=" +queueSize" ,arrowhead="odiamond"];
  Node60 -> Node59 [color="grey25",style="solid",label=" +onFirstMessageReceived\l_\n+onMessageReceived_" ,arrowhead="odiamond"];
  Node60 [label="{smacc::SmaccSignal\l\< void(const MessageType &)\>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",URL="$classsmacc_1_1SmaccSignal.html",tooltip=" "];
  Node61 -> Node60 [dir="back",color="steelblue1",style="solid",arrowtail="onormal"];
  Node61 [label="{boost::signals2::signal\l\< void(const MessageType\l &), optional_last_value\l\< typename boost::function\l_traits\< void(const MessageType\l &) \>::result_type \>, int, std\l::less\< int \>, function\< void(const\l MessageType &) \>, typename extended\l_signature\< function_traits\< void(const\l MessageType &) \>::arity, void(const MessageType\l &) \>::function_type, boost::signals2::mutex \>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node54 -> Node60 [dir="back",color="orange",style="solid",label=" \< void(const MessageType &)\>" ];
  Node62 -> Node59 [color="grey25",style="solid",label=" +postInitialMessageEvent\n+postMessageEvent" ,arrowhead="odiamond"];
  Node62 [label="{function\< void(const\l MessageType &)\>\n||}",height=0.2,width=0.4,color="gray40", fillcolor="white", style="filled",tooltip=" "];
  Node5 -> Node59 [color="grey25",style="solid",label=" #nh_" ,arrowhead="odiamond"];
  Node57 -> Node59 [color="grey25",style="solid",label=" -sub_" ,arrowhead="odiamond"];
  Node58 -> Node59 [color="grey25",style="solid",label=" -firstMessage_\n-initialized_" ,arrowhead="odiamond"];
}
